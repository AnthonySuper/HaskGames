# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'Ubuntu 16.04'

steps:
- script: curl https://nixos.org/nix/install | sh
  displayName: Install NixOS

- script: . /home/vsts/.nix-profile/etc/profile.d/nix.sh
  displayName: Enable NixOS

- script: |
    sudo mkdir -p /etc/nix
    echo "substituters = https://cache.nixos.org/" | sudo tee -a /etc/nix/nix.conf > /dev/null
    echo "binary-caches = https://nixcache.reflex-frp.org https://cache.nixos.org/" | sudo tee -a /etc/nix/nix.conf > /dev/null
    echo "binary-cache-public-keys = ryantrinkle.com-1:JJiAKaRv9mWgpVAz8dwewnZe0AzzEAzPkagE9SP5NWI= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=" | sudo tee -a /etc/nix/nix.conf > /dev/null
  displayName: "Enable the binary caches"
- script: |
    source ~/.nix-profile/etc/profile.d/nix.sh
    ~/.nix-profile/bin/nix -vv build
  displayName: "Run the nix build"
- script: |
    ./build-ci.sh
- task: Docker@1
  displayName: "Build the docker image"
  inputs:
    imageName: "haskgames.azurecr.io/haskgames/haskgames-server:$(Build.BuildId)"
- task: Docker@1
  displayName: 'Login to Docker'
  inputs:
    azureSubscriptionEndpoint: 'haskgames-pipeline'
    azureContainerRegistry: haskgames.azurecr.io
    command: login
- task: Docker@1
  displayName: 'Push the Server Image'
  inputs:
    command: 'push'
    imageName: "haskgames.azurecr.io/haskgames/haskgames-server:$(Build.BuildId)